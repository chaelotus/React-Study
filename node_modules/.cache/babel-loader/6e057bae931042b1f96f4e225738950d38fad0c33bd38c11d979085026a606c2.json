{"ast":null,"code":"var _jsxFileName = \"/Users/parkchaeyeon/Downloads/react-complete-guide/src/App.js\",\n  _s = $RefreshSig$();\n//사용자 지정 컴포넌트 임포트\nimport { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const expenses = [{\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }];\n  const [expense, setExpense] = useState(expenses);\n  const addExpenseHandler = expense => {\n    console.log(\"In App.js\", expense);\n    setExpense(expense);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses,\n      expense: expense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n//ExpenseItem을 html태그 처럼 사용가능하다.\n//단, 위의 방법으로 JSX코드를 사용할 떄 무조건 대문자로 시작되어야 한다. => 그림 리액트가 사용자지정 컴포넌트를 감지할 수 있다.\n//소문자로 시작하는 태그는 html태그이므로 내장요소로 찾을 것이고 대문자느 사용자에 의해 정의된 요소\n_s(App, \"JBTEfB+sh90aCy0+ul0RQHCcTbo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Expenses","NewExpense","jsxDEV","_jsxDEV","App","_s","expenses","id","title","amount","date","Date","expense","setExpense","addExpenseHandler","console","log","children","onAddExpense","fileName","_jsxFileName","lineNumber","columnNumber","items","_c","$RefreshReg$"],"sources":["/Users/parkchaeyeon/Downloads/react-complete-guide/src/App.js"],"sourcesContent":["//사용자 지정 컴포넌트 임포트\nimport { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst App = () => {\n  const expenses = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n  const [expense, setExpense] = useState(expenses);\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"In App.js\", expense);\n    setExpense(expense);\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} expense={expense} />\n    </div>\n  );\n};\n//ExpenseItem을 html태그 처럼 사용가능하다.\n//단, 위의 방법으로 JSX코드를 사용할 떄 무조건 대문자로 시작되어야 한다. => 그림 리액트가 사용자지정 컴포넌트를 감지할 수 있다.\n//소문자로 시작하는 태그는 html태그이므로 내장요소로 찾을 것이고 대문자느 사용자에 의해 정의된 요소\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IAAEJ,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAC1E;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,CACF;EACD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACO,QAAQ,CAAC;EAEhD,MAAMQ,iBAAiB,GAAIF,OAAO,IAAK;IACrCG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,OAAO,CAAC;IACjCC,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EACD,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACF,UAAU;MAACiB,YAAY,EAAEJ;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/CnB,OAAA,CAACH,QAAQ;MAACuB,KAAK,EAAEjB,QAAS;MAACM,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3C;AAEV,CAAC;AACD;AACA;AACA;AAAAjB,EAAA,CArCMD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}